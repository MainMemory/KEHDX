//------------------Sonic CD 3D Ramp Script-------------------//
//--------Scripted by Christian Whitehead 'The Taxman'--------//
//-------Unpacked By Rubberduckycooly's Script Unpacker-------//


// Aliases
private alias object.value1 : Player.XOriginPos
private alias object[+3].value0 : StarBush1.XOriginPos
private alias object[+3].xpos : StarBush1.XPos
private alias object[+4].value0 : StarBush2.XOriginPos
private alias object[+4].xpos : StarBush2.XPos
private alias object[+5].value0 : BoostSpinner.XOriginPos
private alias object[+5].xpos : BoostSpinner.XPos

// States
private alias 0 : RAMP3D_RUN
private alias 1 : RAMP3D_EXIT_UNUSED // a copy of Exit Boost
private alias 2 : RAMP3D_EXIT
private alias 3 : RAMP3D_SET_YBOUND // this doesn't really have anything to do with this object
private alias 4 : RAMP3D_ENTER
private alias 5 : RAMP3D_DROP
private alias 6 : RAMP3D_SET_YBOUND2 // this doesn't really have anything to do with this object
private alias 7 : RAMP3D_RUN_FROM_TOP
private alias 8 : RAMP3D_EXIT_BOOST

// Gravity
private alias 0 : GRAVITY_GROUND
private alias 1 : GRAVITY_AIR

// Priority
private alias 0 : PRIORITY_BOUNDS
private alias 1 : PRIORITY_ACTIVE

// Control Mode
private alias -1 : CONTROLMODE_NONE
private alias 0 : CONTROLMODE_NORMAL


//KEHDX stuff
private alias ANI_JUMPING : ANI_ROLL3D
private alias Player_State_Static : Player_State_Ramp3D
private alias object[currentPlayer].value1  : player.timer

//Hitboxes
private alias object.value40 : player.hitboxLeft
private alias object.value38 : player.hitboxTop
private alias object.value41 : player.hitboxRight
private alias object.value39 : player.hitboxBottom

event ObjectUpdate
	foreach (GROUP_PLAYERS, currentPlayer, ACTIVE_ENTITIES)
	switch object.propertyValue
	case RAMP3D_RUN
		if object[currentPlayer].gravity == GRAVITY_GROUND
			BoxCollisionTest(C_TOUCH, object.entityPos, -16, -16, 16, 16, currentPlayer, player[currentPlayer].hitboxLeft, player[currentPlayer].hitboxTop, player[currentPlayer].hitboxRight, player[currentPlayer].hitboxBottom)
			if checkResult == true

				if object[currentPlayer].state != Player_State_Static
					object[currentPlayer].state = Player_State_Static

					object[currentPlayer].scrollTracking = true
					object[currentPlayer].tileCollisions = false

					object[currentPlayer].speed = 0
					object[currentPlayer].xvel = 0
					object[currentPlayer].yvel = -0xC0000

					object[currentPlayer].animationSpeed = 0
				end if
			end if
		end if
		break

	case RAMP3D_EXIT_UNUSED
		BoxCollisionTest(C_TOUCH, object.entityPos, -16, -16, 16, 16, currentPlayer, player[currentPlayer].hitboxLeft, player[currentPlayer].hitboxTop, player[currentPlayer].hitboxRight, player[currentPlayer].hitboxBottom)
		if checkResult == true

#platform: USE_ORIGINS
		object[currentPlayer].state = Player_State_Air_NoDropDash
#endplatform

#platform: USE_STANDALONE
		object[currentPlayer].state = Player_State_Air
#endplatform

			object[currentPlayer].tileCollisions = true

			object[currentPlayer].speed = 0x80000
			object[currentPlayer].xvel = 0x80000
			object[currentPlayer].yvel = -0xE0000

			object[currentPlayer].gravity = GRAVITY_AIR
			object[currentPlayer].rotation = 384

			stage.newYBoundary2 = 1280
			stage.newXBoundary1 = 2080

			if object[currentPlayer].animation == ANI_ROLL3D
				object[currentPlayer].animation = ANI_JUMPING
			else
				if object[currentPlayer].animation != ANI_JUMPING
					object[currentPlayer].animation = ANI_RUNNING
				end if
			end if

			object[15].type = TypeName[BackgroundFX]
			object[15].priority = PRIORITY_ACTIVE
			object[15].drawOrder = 0

			arrayPos0 = 0
			if arrayPos0 < 2
				hParallax[arrayPos0].scrollPos = 0
				arrayPos0++
			loop
		end if
		break

	case RAMP3D_EXIT
		if object[currentPlayer].state == Player_State_Static
			BoxCollisionTest(C_TOUCH, object.entityPos, -16, -16, 16, 16, currentPlayer, player[currentPlayer].hitboxLeft, player[currentPlayer].hitboxTop, player[currentPlayer].hitboxRight, player[currentPlayer].hitboxBottom)
			if checkResult == true

#platform: USE_ORIGINS
				object[currentPlayer].state = Player_State_Air_NoDropDash
#endplatform

#platform: USE_STANDALONE
				object[currentPlayer].state = Player_State_Air
#endplatform

				object[currentPlayer].tileCollisions = true

				object[currentPlayer].speed = 0x40000
				object[currentPlayer].xvel = 0x40000
				object[currentPlayer].yvel = -0xC0000

				object[currentPlayer].gravity = GRAVITY_AIR
				object[currentPlayer].rotation = 384

				stage.newYBoundary2 = 1280

				if object[currentPlayer].animation == ANI_ROLL3D
					object[currentPlayer].animation = ANI_JUMPING
				else
					if object[currentPlayer].animation != ANI_JUMPING
						object[currentPlayer].animation = ANI_RUNNING
					end if
				end if
			end if
		end if
		break

	case RAMP3D_SET_YBOUND
		if object[currentPlayer].xpos > object.xpos
			stage.curYBoundary2 = 1024
		else
			stage.curYBoundary2 = 1280
		end if
		break

	case RAMP3D_ENTER
		if object[currentPlayer].xpos > object.xpos
			if object[currentPlayer].gravity == GRAVITY_GROUND
				if object[currentPlayer].state != Player_State_Static
					if object[currentPlayer].state == Player_State_Roll

						if object[currentPlayer].angle > 216
							object[currentPlayer].animation = ANI_JUMPING
						else
							if object[currentPlayer].angle == 0
								object[currentPlayer].animation = ANI_JUMPING
							else
								object[currentPlayer].animation = ANI_ROLL3D
							end if
						end if
					else

						if object[currentPlayer].speed != 0
							object[currentPlayer].state = Player_State_Ground
						end if
					end if
				end if
			end if

			StarBush1.XOriginPos = object[currentPlayer].xpos
			StarBush1.XOriginPos -= object.xpos

			BoostSpinner.XOriginPos = StarBush1.XOriginPos
			BoostSpinner.XOriginPos /= 3

			StarBush1.XOriginPos >>= 1
			StarBush2.XOriginPos = StarBush1.XOriginPos
			StarBush1.XOriginPos += StarBush1.XPos
			StarBush2.XOriginPos += StarBush2.XPos

			BoostSpinner.XOriginPos += BoostSpinner.XPos

			temp0 = object.ypos
			temp0 -= object[currentPlayer].ypos
			if temp0 < 0xE00000

				temp0 = object[0].xpos
				temp0 -= Player.XOriginPos
				hParallax[0].scrollPos += temp0

				arrayPos0 = 13
				temp2 = 128
				if arrayPos0 < 141
					temp1 = temp0
					temp1 *= temp2
					temp1 >>= 7
					hParallax[arrayPos0].scrollPos += temp1

					arrayPos0++

					temp2--
				loop

				temp0 <<= 1
				hParallax[1].scrollPos += temp0
			end if
		else
			StarBush1.XOriginPos = StarBush1.XPos

			StarBush2.XOriginPos = StarBush2.XPos

			BoostSpinner.XOriginPos = BoostSpinner.XPos

			if object[currentPlayer].gravity == GRAVITY_GROUND
				if object[currentPlayer].state == Player_State_Ground
					object[currentPlayer].state = Player_State_Ground
				end if
			end if

		end if
		Player.XOriginPos = object[currentPlayer].xpos
		break

	case RAMP3D_DROP
#platform: USE_ORIGINS
		CheckEqual(object[currentPlayer].state, Player_State_Air)
		temp0 = checkResult
		CheckEqual(object[currentPlayer].state, Player_State_Air)
		temp0 |= checkResult
#endplatform

#platform: USE_STANDALONE
		CheckEqual(object[currentPlayer].state, Player_State_Air) // used to be a straight check, changed to be have a cleaner check with origins
		temp0 = checkResult
#endplatform

		if temp0 != false
		BoxCollisionTest(C_TOUCH, object.entityPos, -16, -128, 16, 16, currentPlayer, player[currentPlayer].hitboxLeft, player[currentPlayer].hitboxTop, player[currentPlayer].hitboxRight, player[currentPlayer].hitboxBottom)

			if checkResult == true
				object[currentPlayer].animation = ANI_RUNNING
				Player.XOriginPos = object[currentPlayer].xpos
			end if

			if object[currentPlayer].animation == ANI_RUNNING
				object[currentPlayer].speed = 0
				object[currentPlayer].xvel = 0
				object[currentPlayer].xpos = Player.XOriginPos
			end if
		end if
		break

	case RAMP3D_SET_YBOUND2
		if object[currentPlayer].ypos < object.ypos
			if object[currentPlayer].xpos > object.xpos
				stage.curYBoundary2 = 792
			else
				stage.curYBoundary2 = 1024
			end if
		end if
		break

	case RAMP3D_RUN_FROM_TOP
		if object[currentPlayer].xpos > object.xpos
			stage.curYBoundary2 = 1024
			if object[currentPlayer].gravity == GRAVITY_GROUND
				if object[currentPlayer].state == Player_State_Static
					object[currentPlayer].state = Player_State_Ground
				end if
			end if
		else
			stage.curYBoundary2 = 792
		end if
		break

	case RAMP3D_EXIT_BOOST
		BoxCollisionTest(C_TOUCH, object.entityPos, -16, -16, 16, 16, currentPlayer, player[currentPlayer].hitboxLeft, player[currentPlayer].hitboxTop, player[currentPlayer].hitboxRight, player[currentPlayer].hitboxBottom)
		if checkResult == true

#platform: USE_ORIGINS
		object[currentPlayer].state = Player_State_Air_NoDropDash
#endplatform

#platform: USE_STANDALONE
		object[currentPlayer].state = Player_State_Air
#endplatform

			object[currentPlayer].tileCollisions = true

			object[currentPlayer].speed = 0x80000
			object[currentPlayer].xvel = 0x80000
			object[currentPlayer].yvel = -0xE0000

			object[currentPlayer].gravity = GRAVITY_AIR
			object[currentPlayer].rotation = 384

			stage.newYBoundary2 = 1280
			stage.newXBoundary1 = 2080

			if object[currentPlayer].animation == ANI_ROLL3D
				object[currentPlayer].animation = ANI_JUMPING
			else
				if object[currentPlayer].animation != ANI_JUMPING
					object[currentPlayer].animation = ANI_RUNNING
				end if
			end if

			object[15].type = TypeName[BackgroundFX]
			object[15].priority = PRIORITY_ACTIVE
			object[15].drawOrder = 0

			arrayPos0 = 0
			if arrayPos0 < 2
				hParallax[arrayPos0].scrollPos = 0
				arrayPos0++
			loop
		end if

		if object[currentPlayer].yvel < 0
			object[currentPlayer].controlMode = CONTROLMODE_NONE
			object[currentPlayer].left = false
			object[currentPlayer].right = false
			object.priority = PRIORITY_ACTIVE
		else
			object[currentPlayer].controlMode = CONTROLMODE_NORMAL
			object.priority = PRIORITY_BOUNDS
		end if

		break
	end switch
	next
end event


event ObjectStartup
	if object[currentPlayer].xpos > 0x7D00000
		stage.curYBoundary2 = 1280
		object[15].type = TypeName[BackgroundFX]
		object[15].priority = PRIORITY_ACTIVE
		object[15].drawOrder = 0
	end if

	if object[currentPlayer].xpos > 0xFA00000
		stage.curYBoundary2 = 1024
	end if
end event


// ========================
// Editor Subs
// ========================












event RSDKDraw
	DrawSprite(0)
end event


event RSDKLoad
	LoadSpriteSheet("Global/Display.gif")
	SpriteFrame(-16, -16, 32, 32, 1, 143) // #0 - "Script" Icon






end event
