//----------------Sonic CD Solid Block Script-----------------//
//--------Scripted by Christian Whitehead 'The Taxman'--------//
//-------Unpacked By Rubberduckycooly's Script Unpacker-------//

// Aliases

// Time Period Aliases
private alias object[24].propertyValue : HUD.CurrentTimePeriod

private alias 0 : TIME_PRESENT
private alias 1 : TIME_PAST
private alias 2 : TIME_GOOD_FUTURE
private alias 3 : TIME_BAD_FUTURE

// Gravity
private alias 0 : GRAVITY_GROUND

// Ink Effect
private alias 1 : INK_BLEND

// Player Collision
private alias 2 : PLAYER_COL_LWALL
private alias 4 : PLAYER_COL_ROOF

// Property Values
private alias 0 : SINGLE_BLOCK
private alias 1 : TWO_BLOCKS_H
private alias 2 : THREE_BLOCKS_H
private alias 3 : FOUR_BLOCKS_H
private alias 4 : TWO_BLOCKS_V
private alias 5 : THREE_BLOCKS_V
private alias 6 : FOUR_BLOCKS_V
private alias 7 : INV_BLOCK

private alias object.value40 : player.hitboxLeft
private alias object.value38 : player.hitboxTop
private alias object.value41 : player.hitboxRight
private alias object.value39 : player.hitboxBottom

event ObjectUpdate
	foreach (GROUP_PLAYERS, currentPlayer, ACTIVE_ENTITIES)

	temp0 = object[currentPlayer].ypos

	// Different collision widths & heights for different block types
	switch object.propertyValue
	case SINGLE_BLOCK
	case INV_BLOCK
		BoxCollisionTest(C_SOLID, object.entityPos, -16, -16, 16, 16, currentPlayer, player[currentPlayer].hitboxLeft, player[currentPlayer].hitboxTop, player[currentPlayer].hitboxRight, player[currentPlayer].hitboxBottom)
		break

	case TWO_BLOCKS_H
		BoxCollisionTest(C_SOLID, object.entityPos, -32, -16, 32, 16, currentPlayer, player[currentPlayer].hitboxLeft, player[currentPlayer].hitboxTop, player[currentPlayer].hitboxRight, player[currentPlayer].hitboxBottom)
		break

	case THREE_BLOCKS_H
		BoxCollisionTest(C_SOLID, object.entityPos, -48, -16, 48, 16, currentPlayer, player[currentPlayer].hitboxLeft, player[currentPlayer].hitboxTop, player[currentPlayer].hitboxRight, player[currentPlayer].hitboxBottom)
		break

	case FOUR_BLOCKS_H
		BoxCollisionTest(C_SOLID, object.entityPos, -64, -16, 64, 16, currentPlayer, player[currentPlayer].hitboxLeft, player[currentPlayer].hitboxTop, player[currentPlayer].hitboxRight, player[currentPlayer].hitboxBottom)
		break

	case TWO_BLOCKS_V
		BoxCollisionTest(C_SOLID, object.entityPos, -16, -32, 16, 32, currentPlayer, player[currentPlayer].hitboxLeft, player[currentPlayer].hitboxTop, player[currentPlayer].hitboxRight, player[currentPlayer].hitboxBottom)
		break

	case THREE_BLOCKS_V
		BoxCollisionTest(C_SOLID, object.entityPos, -16, -48, 16, 48, currentPlayer, player[currentPlayer].hitboxLeft, player[currentPlayer].hitboxTop, player[currentPlayer].hitboxRight, player[currentPlayer].hitboxBottom)
		break

	case FOUR_BLOCKS_V
		BoxCollisionTest(C_SOLID, object.entityPos, -16, -64, 16, 64, currentPlayer, player[currentPlayer].hitboxLeft, player[currentPlayer].hitboxTop, player[currentPlayer].hitboxRight, player[currentPlayer].hitboxBottom)
		break

	end switch

	// Left Wall Collsion (on the block) detected?
	if checkResult == PLAYER_COL_LWALL
		// Set the Player's Right Collision Flag to true
		// (Used in the Metal Sonic race sequence)

		Player.RCollisionFlag = true
	end if

	// Roof collision detected while the player's on the ground?
	if object[currentPlayer].gravity == GRAVITY_GROUND
		if checkResult == PLAYER_COL_ROOF
			// Move the player back ontop of the block
			object[currentPlayer].ypos = temp0
		end if
	end if
	next
end event


event ObjectDraw
	switch object.propertyValue
	case SINGLE_BLOCK
		DrawSprite(0)
		break

	case TWO_BLOCKS_H
		temp0 = object.xpos
		temp0 -= 0x100000
		DrawSpriteXY(0, temp0, object.ypos)
		temp0 += 0x200000
		DrawSpriteXY(0, temp0, object.ypos)
		break

	case THREE_BLOCKS_H
		temp0 = object.xpos
		temp0 -= 0x200000
		DrawSpriteXY(0, temp0, object.ypos)
		temp0 += 0x200000
		DrawSpriteXY(0, temp0, object.ypos)
		temp0 += 0x200000
		DrawSpriteXY(0, temp0, object.ypos)
		break

	case FOUR_BLOCKS_H
		temp0 = object.xpos
		temp0 -= 0x300000
		DrawSpriteXY(0, temp0, object.ypos)
		temp0 += 0x200000
		DrawSpriteXY(0, temp0, object.ypos)
		temp0 += 0x200000
		DrawSpriteXY(0, temp0, object.ypos)
		temp0 += 0x200000
		DrawSpriteXY(0, temp0, object.ypos)
		break

	case TWO_BLOCKS_V
		temp0 = object.ypos
		temp0 -= 0x100000
		DrawSpriteXY(0, object.xpos, temp0)
		temp0 += 0x200000
		DrawSpriteXY(0, object.xpos, temp0)
		break

	case THREE_BLOCKS_V
		temp0 = object.ypos
		temp0 -= 0x200000
		DrawSpriteXY(0, object.xpos, temp0)
		temp0 += 0x200000
		DrawSpriteXY(0, object.xpos, temp0)
		temp0 += 0x200000
		DrawSpriteXY(0, object.xpos, temp0)
		break

	case FOUR_BLOCKS_V
		temp0 = object.ypos
		temp0 -= 0x300000
		DrawSpriteXY(0, object.xpos, temp0)
		temp0 += 0x200000
		DrawSpriteXY(0, object.xpos, temp0)
		temp0 += 0x200000
		DrawSpriteXY(0, object.xpos, temp0)
		temp0 += 0x200000
		DrawSpriteXY(0, object.xpos, temp0)
		break

		// case 7, the invisible block, doesn't draw anything of course

	end switch

end event


event ObjectStartup
	LoadSpriteSheet("R7/Objects.gif")
	SpriteFrame(-16, -16, 32, 32, 1, 1) //bad ass block
end event


// ========================
// Editor Subs
// ========================




// Property Value


// Type






// Property Value


// Type








event RSDKDraw
	switch object.propertyValue
	case 0
		DrawSprite(0)
		break
	case 1
		temp0 = object.xpos
		temp0 -= 0x100000
		DrawSpriteXY(0, temp0, object.ypos)
		temp0 += 0x200000
		DrawSpriteXY(0, temp0, object.ypos)
		break
	case 2
		temp0 = object.xpos
		temp0 -= 0x200000
		DrawSpriteXY(0, temp0, object.ypos)
		temp0 += 0x200000
		DrawSpriteXY(0, temp0, object.ypos)
		temp0 += 0x200000
		DrawSpriteXY(0, temp0, object.ypos)
		break
	case 3
		temp0 = object.xpos
		temp0 -= 0x300000
		DrawSpriteXY(0, temp0, object.ypos)
		temp0 += 0x200000
		DrawSpriteXY(0, temp0, object.ypos)
		temp0 += 0x200000
		DrawSpriteXY(0, temp0, object.ypos)
		temp0 += 0x200000
		DrawSpriteXY(0, temp0, object.ypos)
		break
	case 4
		temp0 = object.ypos
		temp0 -= 0x100000
		DrawSpriteXY(0, object.xpos, temp0)
		temp0 += 0x200000
		DrawSpriteXY(0, object.xpos, temp0)
		break
	case 5
		temp0 = object.ypos
		temp0 -= 0x200000
		DrawSpriteXY(0, object.xpos, temp0)
		temp0 += 0x200000
		DrawSpriteXY(0, object.xpos, temp0)
		temp0 += 0x200000
		DrawSpriteXY(0, object.xpos, temp0)
		break
	case 6
		temp0 = object.ypos
		temp0 -= 0x300000
		DrawSpriteXY(0, object.xpos, temp0)
		temp0 += 0x200000
		DrawSpriteXY(0, object.xpos, temp0)
		temp0 += 0x200000
		DrawSpriteXY(0, object.xpos, temp0)
		temp0 += 0x200000
		DrawSpriteXY(0, object.xpos, temp0)
		break
	case 7
		// This subtype acts as an invis block so normally it's invisible - but it has to show in the editor somehow!

		object.inkEffect = INK_BLEND
		DrawSpriteScreenFX(0, FX_INK, object.xpos, object.ypos)

		if Editor.ShowGizmos == true
			// The sprite is faint so draw the hitbox of the box

			temp0 = object.ixpos
			temp0 -= 16
			temp1 = object.iypos
			temp1 -= 16

		end if
		break
	end switch
end event


event RSDKLoad
	LoadSpriteSheet("R7/Objects.gif")
	SpriteFrame(-16, -16, 32, 32, 1, 1)











end event
