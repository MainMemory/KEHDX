//------------------Sonic CD Kabasira Script------------------//
//--------Scripted by Christian Whitehead 'The Taxman'--------//
//-------Unpacked By Rubberduckycooly's Script Unpacker-------//

// Aliases
private alias object.value0 : Object.Timer
private alias object.value1 : Object.Angle
private alias object.value2 : Object.StartPosX
private alias object.value3 : Object.StartPosY
private alias object.value4 : Object.DrawPosX
private alias object.value5 : Object.DrawPosY

private alias object.propertyValue : Object.Quality

// Kabasira Shot Aliases
private alias object.value1 : Object.XVelocity
private alias object.value2 : Object.YVelocity

// States 0-1 are never used, aside from state 0 being the default state
private alias 2 : KABASIRA_INACTIVE

// Ink Effect
private alias 2 : INK_ALPHA

// Stage SFX
private alias 2 : SFX_S_SHOT

// Badnik Quality / Property Values
private alias 0 : GOOD_QUALITY
private alias 1 : BAD_QUALITY

private alias object.value40 : player.hitboxLeft
private alias object.value38 : player.hitboxTop
private alias object.value41 : player.hitboxRight
private alias object.value39 : player.hitboxBottom

event ObjectUpdate
	if object.outOfBounds == true
		// The object is out of bounds, reset it
		object.state = KABASIRA_INACTIVE
		Object.Timer = 0

		// Neutral angle, right between 512 and 000
		Object.Angle = 256

		// The object never seems to refrence its direction, nor does it use FX_FLIP, so I believe this is effectively unused?
		object.direction = FACING_RIGHT

		// Move it back to its starting position
		// (Although, normally there's a check to make sure the starting position is OOB too to prevent visible teleporting, why isn't there a check like that this time?)
		object.xpos = Object.StartPosX
		object.ypos = Object.StartPosY
	end if

	foreach (GROUP_PLAYERS, currentPlayer, ACTIVE_ENTITIES)


		if Object.Quality == GOOD_QUALITY
			// Good variant of the object, able to attack
	
			Object.Angle += 2
			Object.Angle &= 511
			object.frame = object.animationTimer
			object.frame >>= 3
			object.animationTimer++
			object.animationTimer &= 15
	
			if Object.Timer == 0
				Object.Timer = 240
	
				// Shoot a shot at the player
	
				PlaySfx(SfxName[Shot], false)
	
	
				// Different shot subtypes based on the player's position relative to the Kabasira
				if object[currentPlayer].xpos > object.xpos
					CreateTempObject(TypeName[Kabasira Shot], 0, object.xpos, object.ypos)
				else
					CreateTempObject(TypeName[Kabasira Shot], 1, object.xpos, object.ypos)
				end if
	
				object[TempObjectPos].inkEffect = INK_ALPHA
				object[TempObjectPos].alpha = 192
	
				// Find the velocities to send the shot at
	
				temp0 = object[currentPlayer].xpos
				temp0 -= object.xpos
				temp1 = object[currentPlayer].ypos
				temp1 -= object.ypos
	
				ATan2(temp2, temp0, temp1)
	
				Cos256(Object.XVelocity[TempObjectPos], temp2)
				Sin256(Object.YVelocity[TempObjectPos], temp2)
				Object.XVelocity[TempObjectPos] <<= 9
				Object.YVelocity[TempObjectPos] <<= 9
			else
				Object.Timer--
			end if
		else
			// Peaceful variant of the object, no attacking the player needed so just float around
			Object.Angle++
			Object.Angle &= 511

			object.frame = object.animationTimer
			object.frame >>= 4
			object.animationTimer++
			object.animationTimer &= 31
		end if
		
		Cos(object.ypos, Object.Angle)
		object.ypos <<= 13
		object.ypos += Object.StartPosY
	
		temp0 = Object.Angle
		temp0 <<= 1
	
		Sin(object.xpos, temp0)
		object.xpos *= 0xA00
		object.xpos += Object.StartPosX
	

		// Check if the player's touched the head

		BoxCollisionTest(C_TOUCH, object.entityPos, -6, -6, 6, 6, currentPlayer, player[currentPlayer].hitboxLeft, player[currentPlayer].hitboxTop, player[currentPlayer].hitboxRight, player[currentPlayer].hitboxBottom)
		if checkResult == true
			CallFunction(Player_BadnikBreak)
			if object.type == TypeName[Blank Object]	
				CallFunction(EmeraldManager_AwardEmerald)	
			end if
		end if

	next

end event


event ObjectDraw
	if object.state < KABASIRA_INACTIVE

		// First, draw each body part
		temp0 = 0
		temp1 = 488
		temp3 = Object.Angle
		temp3 += 464
		temp3 &= 511
		object.alpha = 64

		while temp0 < 4
			temp2 = Object.Angle
			temp2 += temp1
			temp2 &= 511
			temp2 /= 42
			temp2 %= 12

			Cos(Object.DrawPosY, temp3)
			Object.DrawPosY <<= 13
			Object.DrawPosY += Object.StartPosY

			temp4 = temp3
			temp4 <<= 1

			Sin(Object.DrawPosX, temp4)
			Object.DrawPosX *= 0xA00
			Object.DrawPosX += Object.StartPosX

			switch temp2
			case 0
			case 6
				DrawSpriteFX(temp2, FX_INK, Object.DrawPosX, Object.DrawPosY)
				DrawSpriteFX(0, FX_INK, Object.DrawPosX, Object.DrawPosY)
				temp2 = 6
				temp2 += object.frame
				break

			case 1
			case 7
				DrawSpriteFX(temp2, FX_INK, Object.DrawPosX, Object.DrawPosY)
				DrawSpriteFX(1, FX_INK, Object.DrawPosX, Object.DrawPosY)
				temp2 = 8
				temp2 += object.frame
				break

			case 2
			case 8
				DrawSpriteFX(temp2, FX_INK, Object.DrawPosX, Object.DrawPosY)
				DrawSpriteFX(2, FX_INK, Object.DrawPosX, Object.DrawPosY)
				temp2 = 10
				temp2 += object.frame
				break

			case 3
			case 9
				DrawSpriteFX(3, FX_INK, Object.DrawPosX, Object.DrawPosY)
				temp2 = 12
				temp2 += object.frame
				DrawSpriteFX(temp2, FX_INK, Object.DrawPosX, Object.DrawPosY)
				break

			case 4
			case 10
				temp2 = 14
				temp2 += object.frame
				DrawSpriteFX(temp2, FX_INK, Object.DrawPosX, Object.DrawPosY)
				DrawSpriteFX(4, FX_INK, Object.DrawPosX, Object.DrawPosY)
				break

			case 5
			case 11
				temp2 = 16
				temp2 += object.frame
				DrawSpriteFX(temp2, FX_INK, Object.DrawPosX, Object.DrawPosY)
				DrawSpriteFX(5, FX_INK, Object.DrawPosX, Object.DrawPosY)
				break

			end switch

			temp0++
			temp1 += 8
			temp3 += 12
			temp3 &= 511
			object.alpha += 32
		loop

		// Draw the head & wings
		// Different sprites & priority for the Kabasira's different directions

		temp0 = Object.Angle
		temp0 += 8
		temp0 &= 511
		temp0 /= 42
		temp0 %= 12
		switch temp0
		case 0
		case 6
			DrawSpriteXY(0, Object.DrawPosX, Object.DrawPosY)
			temp2 = 6
			temp2 += object.frame
			DrawSpriteXY(temp2, Object.DrawPosX, Object.DrawPosY)
			break

		case 1
		case 7
			DrawSpriteXY(1, Object.DrawPosX, Object.DrawPosY)
			temp2 = 8
			temp2 += object.frame
			DrawSpriteXY(temp2, Object.DrawPosX, Object.DrawPosY)
			break

		case 2
		case 8
			DrawSpriteXY(2, Object.DrawPosX, Object.DrawPosY)
			temp2 = 10
			temp2 += object.frame
			DrawSpriteXY(temp2, Object.DrawPosX, Object.DrawPosY)
			break

		case 3
		case 9
			DrawSpriteXY(3, Object.DrawPosX, Object.DrawPosY)
			temp2 = 12
			temp2 += object.frame
			DrawSpriteXY(temp2, Object.DrawPosX, Object.DrawPosY)
			break

		case 4
		case 10
			temp2 = 14
			temp2 += object.frame
			DrawSpriteXY(temp2, Object.DrawPosX, Object.DrawPosY)
			DrawSpriteXY(4, Object.DrawPosX, Object.DrawPosY)
			break

		case 5
		case 11
			temp2 = 16
			temp2 += object.frame
			DrawSpriteXY(temp2, Object.DrawPosX, Object.DrawPosY)
			DrawSpriteXY(5, Object.DrawPosX, Object.DrawPosY)
			break

		end switch

	end if

end event


event ObjectStartup

	LoadSpriteSheet("R7/Objects.gif")

	// Kabasira Body Frames
	SpriteFrame(-8, -8, 16, 16, 133, 100)
	SpriteFrame(-8, -8, 16, 16, 150, 100)
	SpriteFrame(-8, -8, 16, 16, 167, 100)
	SpriteFrame(-8, -8, 16, 16, 184, 100)
	SpriteFrame(-8, -8, 16, 16, 99, 100)
	SpriteFrame(-8, -8, 16, 16, 116, 100)

	// Kabasira Wing Frames
	SpriteFrame(-8, -6, 8, 8, 243, 101)
	SpriteFrame(-8, -6, 8, 8, 243, 110)
	SpriteFrame(-12, -6, 24, 8, 218, 101)
	SpriteFrame(-12, -6, 24, 8, 218, 110)
	SpriteFrame(-8, -6, 16, 8, 218, 92)
	SpriteFrame(-8, -6, 16, 8, 235, 92)
	SpriteFrame(0, -6, 8, 8, 240, 74)
	SpriteFrame(0, -6, 8, 8, 240, 83)
	SpriteFrame(-8, -6, 16, 8, 218, 92)
	SpriteFrame(-8, -6, 16, 8, 235, 92)
	SpriteFrame(-12, -6, 24, 8, 218, 101)
	SpriteFrame(-12, -6, 24, 8, 218, 110)

	// Setup all Kabasira objects in the level
	foreach (TypeName[Kabasira], arrayPos0, ALL_ENTITIES)
		// Store the starting Positions since the Kabasira moves around
		Object.StartPosX[arrayPos0] = object[arrayPos0].xpos
		Object.StartPosY[arrayPos0] = object[arrayPos0].ypos

		// Kabasira's tail has a fade effect, so give it the INK_ALPHA effect
		object[arrayPos0].inkEffect = INK_ALPHA

		// Give it 2 seconds of starting idle time before it starts to shoot
		Object.Timer[arrayPos0] = 120

		CallFunction(EmeraldManager_AddEntity)

	next

end event


// ========================
// Editor Subs
// ========================




// Property Value


// Condition





// Property Value


// Condition







event RSDKDraw
	DrawSprite(1)
	DrawSprite(0)
end event


event RSDKLoad
	LoadSpriteSheet("R7/Objects.gif")
	SpriteFrame(-8, -8, 16, 16, 116, 100)
	SpriteFrame(-8, -6, 8, 8, 243, 101)





end event
