//----------------Sonic CD Tube Switch Script-----------------//
//--------Scripted by Christian Whitehead 'The Taxman'--------//
//-------Unpacked By Rubberduckycooly's Script Unpacker-------//

// Aliases
private alias object.value0 : Object.OnObject
private alias object.value1 : Object.LaunchSpeed

// Player Aliases
// WARNING: Variable VAR_PLAYERVALUE6 does not exist in RSDKv4!

// Gravity
private alias 0 : GRAVITY_GROUND
private alias 1 : GRAVITY_AIR

// Collision Modes
private alias 0 : CMODE_FLOOR
private alias 1 : CMODE_LWALL
private alias 2 : CMODE_ROOF
private alias 3 : CMODE_RWALL

// Global SFX
private alias 7 : SFX_G_RELEASE

// Property Values
private alias 0 : HORIZONTAL_TUBE
private alias 1 : VERTICAL_TUBE
private alias 2 : BOOST_ANGLE_TUBE
private alias 3 : BOOST_VERTICAL_TUBE
private alias 4 : HORIZONTAL_EXIT_TUBE
private alias 5 : VERTICAL_EXIT_TUBE
private alias 6 : SPEED_LIMITED_TUBE
private alias 7 : EXIT_ANGLE_TUBE
private alias 8 : EXIT_BOOST_TUBE

private alias object.value40 : player.hitboxLeft
private alias object.value38 : player.hitboxTop
private alias object.value41 : player.hitboxRight
private alias object.value39 : player.hitboxBottom

event ObjectUpdate
foreach (GROUP_PLAYERS, currentPlayer, ACTIVE_ENTITIES)
	BoxCollisionTest(C_TOUCH, object.entityPos, -16, -16, 16, 16, currentPlayer, player[currentPlayer].hitboxLeft, player[currentPlayer].hitboxTop, player[currentPlayer].hitboxRight, player[currentPlayer].hitboxBottom)
	if checkResult == true
		switch object.propertyValue
		case HORIZONTAL_TUBE
			if object[currentPlayer].speed > 0
				if object[currentPlayer].state != Player_State_TubeRoll
					PlaySfx(SFX_G_RELEASE, false)
				end if

				object[currentPlayer].direction = FACING_RIGHT
				object[currentPlayer].state = Player_State_TubeRoll
				object[currentPlayer].animation = ANI_JUMPING

				if object[currentPlayer].speed < 0xA0000
					object[currentPlayer].speed = 0xA0000
				end if
			else
				if object[currentPlayer].gravity == GRAVITY_GROUND

					if object[currentPlayer].speed > -0x20000
						object[currentPlayer].speed = -0x20000
					end if

				end if
				object[currentPlayer].state = Player_State_Roll
				object[currentPlayer].animation = ANI_JUMPING
			end if
			break

		case VERTICAL_TUBE
			if object[currentPlayer].state != Player_State_TubeRoll
				PlaySfx(SFX_G_RELEASE, false)
			end if
			object[currentPlayer].gravity = GRAVITY_GROUND
			object[currentPlayer].state = Player_State_TubeRoll
			object[currentPlayer].animation = ANI_JUMPING
			object[currentPlayer].collisionMode = CMODE_RWALL
			object[currentPlayer].angle = 64
			object[currentPlayer].speed = 0x100000
			break

		case BOOST_ANGLE_TUBE
			if Object.OnObject == false

				if object[currentPlayer].collisionMode == CMODE_FLOOR
					object[currentPlayer].collisionMode = CMODE_ROOF
					FlipSign(object[currentPlayer].speed)
					object[currentPlayer].angle = 128
				else
					object[currentPlayer].collisionMode = CMODE_FLOOR
					FlipSign(object[currentPlayer].speed)
					object[currentPlayer].angle = 0
					object[currentPlayer].ypos += 0x40000
				end if

				object[currentPlayer].state = Player_State_TubeRoll
				object[currentPlayer].animation = ANI_JUMPING

			end if
			break

		case BOOST_VERTICAL_TUBE
			if object[currentPlayer].yvel < 0

				object[currentPlayer].gravity = GRAVITY_GROUND
				object[currentPlayer].state = Player_State_TubeRoll
				object[currentPlayer].animation = ANI_JUMPING
				object[currentPlayer].collisionMode = CMODE_LWALL
				object[currentPlayer].angle = 192
				object[currentPlayer].speed = object[currentPlayer].yvel
				FlipSign(object[currentPlayer].speed)

			end if
			break

		case HORIZONTAL_EXIT_TUBE
			if object[currentPlayer].speed < 0
				if object[currentPlayer].state != Player_State_TubeRoll
					PlaySfx(SFX_G_RELEASE, false)
				end if

				object[currentPlayer].state = Player_State_Air
				object[currentPlayer].animation = ANI_JUMPING
			else
				object[currentPlayer].state = Player_State_Roll
				object[currentPlayer].animation = ANI_JUMPING
			end if
			break

		case VERTICAL_EXIT_TUBE
			if object[currentPlayer].gravity == GRAVITY_AIR
				object[currentPlayer].xvel = Object.LaunchSpeed
				object[currentPlayer].speed = Object.LaunchSpeed
				object[currentPlayer].state = Player_State_Air
			else
				if object[currentPlayer].collisionMode == CMODE_LWALL
					object[currentPlayer].angle = 196
					Cos256(temp0, object[currentPlayer].angle)
					temp0 *= object[currentPlayer].speed
					temp0 >>= 8
					if temp0 != 0
						Object.LaunchSpeed = temp0
					end if
				end if
			end if
			break

		case SPEED_LIMITED_TUBE
			if object[currentPlayer].state == Player_State_TubeRoll

				if object[currentPlayer].yvel < -0x60000
					object[currentPlayer].yvel = -0x60000
				end if

			else
				object[currentPlayer].animation = ANI_JUMPING
			end if
			break

		case EXIT_ANGLE_TUBE
			if object[currentPlayer].state == Player_State_TubeRoll
				object.propertyValue = EXIT_BOOST_TUBE
			end if
			break

		case EXIT_BOOST_TUBE
			if object[currentPlayer].gravity == GRAVITY_AIR
				object[currentPlayer].yvel = -0xA8000
				object.propertyValue = EXIT_ANGLE_TUBE
			end if
			break

		end switch

		Object.OnObject = true
	else
		Object.OnObject = false
	end if
next
end event


// ========================
// Editor Subs
// ========================

event RSDKDraw
	temp0 = object.xpos
	temp0 -= 0x80000
	temp1 = object.ypos
	temp1 -= 0x80000

	DrawSpriteXY(0, temp0, temp1)

	temp0 += 0x100000
	DrawSpriteXY(0, temp0, temp1)

	temp1 += 0x100000
	DrawSpriteXY(0, temp0, temp1)

	temp0 -= 0x100000
	DrawSpriteXY(0, temp0, temp1)
end event


event RSDKLoad
	LoadSpriteSheet("Global/Display.gif")
	SpriteFrame(-8, -8, 16, 16, 173, 67) // #0 - "T" Icon


end event
